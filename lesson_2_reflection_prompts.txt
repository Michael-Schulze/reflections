What happens when you initialize a repository? Why do you need to do it?
git init will initialize a git project and creates an hidden folder .git as archive
->>
Within this archiv the history of commited files will be stored

How is the staging area different from the working directory and the repository?
What value do you think it offers?
->>
It is a kind of container for files, which should be committed. So it must not include all files of working directory and/or repository.

How can you use the staging area to make sure you have one commit per logical
change?
->>
staging area can be used as a kind of pre save memory

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
->>
for experimental stuff we can have a clean and working branch and can experiment on a second branch instead of disturbing the official version

How do the diagrams help you visualize the branch structure?
->>
Same IDs can be identified and they are the starting points of new branches

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
->>
We get same lines of code between the versions together and all additional lines, but removed lines will not be copied.
Graph is used to represent the parents of changes.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
